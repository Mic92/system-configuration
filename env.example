# hologram-damogran-dyndns
export GANDI_APIKEY="Phezah0Ueh4kuB2tohxahn"
export GANDI_DOMAIN="example.org"
export GANDI_SUBDOMAINS='["foo","bar"]' # a JSON array of strings

# holodeck-damogran: network configuration
export DAMOGRAN_IFACE_LAN="eth0"
export DAMOGRAN_IFACE_WLAN="wlan0"
export DAMOGRAN_IFACE_WAN="eth1"
export DAMOGRAN_WLAN_SSID="foo"
export DAMOGRAN_WLAN_PSK="bar"

# holodeck-damogran: UUID of root partition
# (as found by `blkid -s PARTUUID -o value /dev/sdXY`)
export DAMOGRAN_ROOT_PARTUUID="8042b4d0-b9e5-4e34-8cf8-9fa25de1d512"

# holodeck-damogran contains nginx configuration for serving static content
# for a certain domain and directory path as configured here
export DAMOGRAN_HTTP_STATIC_DOMAIN="static.example.org"
export DAMOGRAN_HTTP_STATIC_PATH="/path/to/static/content"
# holodeck-damogran configures letsencrypt, and /etc/letsencrypt is backed up to the following path
export DAMOGRAN_CERT_BACKUP_PATH="/path/to/backup/location"

# holodeck-arcturus: UUID of root partition
# (as found by `blkid -s PARTUUID -o value /dev/sdXY`)
export ARCTURUS_ROOT_PARTUUID="8042b4d0-b9e5-4e34-8cf8-9fa25de1d512"

# holodeck-arcturus: network configuration
export ARCTURUS_IFACE_WLAN="wlan0"

# public key material (to establish basic trust between hosts)
read -r -d '' AUTHORIZED_KEYS <<-'EOF' || true
ssh-rsa ...
ssh-rsa ...
EOF
export AUTHORIZED_KEYS
